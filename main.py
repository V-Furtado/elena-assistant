#imports
import sys
import speech_recognition as sr
import webbrowser # to enable search on google
import time
import playsound
import os # to remove the file generated by playsound
import random # to random generate the file name for the audio files
from gtts import gTTS # to generate text-to-speech
from time import ctime

# initialize recognizer class: to recognize the speech 
r = sr.Recognizer()

# create a function called elena_speak
def elena_speak(audio_string):
    # attributes
    tts = gTTS(text=audio_string, lang='en')
    # create a random int
    r = random.randint(1,10000000)
    audio_file = 'audio-' + str(r) + '.mp3'
    tts.save(audio_file)
    playsound.playsound(audio_file)
    print(audio_string)
    os.remove(audio_file) # remove the audio file


# microphone recognizer
# create a function to recognize the microphone audio
def record_audio(ask = False):
    with sr.Microphone() as source:
        if ask:
            elena_speak(ask)
        # attributes
        audio = r.listen(source)
        voice_data = ''
        try:
            voice_data = r.recognize_google(audio)
        except sr.UnknownValueError:
            elena_speak("Sorry, I did not get that")
            
        except sr.RequestError:
            elena_speak("Sorry, my speech service failed")
        return voice_data


# create a function called respond
def respond(voice_data):
    if 'what is your name' in voice_data:
        elena_speak('My name is Elena')
    if 'what time is it' in voice_data:
        elena_speak(ctime())
        main()

    # search responce
    if 'search' in voice_data:
        # create a variable called search
        search = record_audio('What do you want to search for?')
        # create the url to search from 
        url = 'http://google.com/search?q=' + search
        webbrowser.get().open(url) # to open on the web browser
        elena_speak('Here is What I found for ' + search)
        main()

    # youtube responce
    if 'YouTube' in voice_data:
        # create a variable called search
        youtube = record_audio('What do you want to search on youtube?')
        # create the url to search from 
        url = 'http://youtube.com/search?q=' + youtube
        webbrowser.get().open(url) # to open on the web browser
        elena_speak('Here is What I found for ' + youtube)
        main() 


    # location responce
    if 'find location' in voice_data:
        # create a variable called location 
        location = record_audio('What is the location?')
         # create the url to find the location 
        url = 'http://google.nl/maps/place/' + location + '/&amp;'
        webbrowser.get().open(url) # to open on the web browser
        elena_speak('Here is the location I found for ' + location)
        main()
   

    # exit
    if 'exit' in voice_data:
        exit()


def main():
    while True:
        time.sleep(1)
        elena_speak("How can I help you?")
       
        voice_data = record_audio()
        respond(voice_data)
        time.sleep(1)

if __name__ == "__main__":
    sys.exit(main())